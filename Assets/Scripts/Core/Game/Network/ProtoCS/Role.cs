// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Role.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace P5.Protobuf {

  /// <summary>Holder for reflection information generated from Role.proto</summary>
  public static partial class RoleReflection {

    #region Descriptor
    /// <summary>File descriptor for Role.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpSb2xlLnByb3RvEgtQNS5Qcm90b2J1ZhoMQ29tbW9uLnByb3RvGgtTa2ls",
            "bC5wcm90byIqCghSb2xlTGlzdBIOCgZ1c2VyaWQYASABKAUSDgoGem9uZUlk",
            "GAIgASgFIk0KEFJvbGVMaXN0UmVzcG9uc2USEQoJcm9sZUNvdW50GAEgASgF",
            "EiYKBXJvbGVzGAIgAygLMhcuUDUuUHJvdG9idWYuUm9sZVNpbXBsZSKOAQoK",
            "Um9sZVNpbXBsZRIOCgZyb2xlSWQYASABKAUSCwoDc2V4GAIgASgFEhIKCm9j",
            "Y3VwYXRpb24YAyABKAUSDAoEbmFtZRgEIAEoCRINCgVsZXZlbBgFIAEoBRIX",
            "Cg9jaGFuZ2VMaWZlQ291bnQYBiABKAUSGQoRcHJlRGVsTGVmdFNlY29uZHMY",
            "ByABKAUixAEKCkNyZWF0ZVJvbGUSDgoGdXNlcklkGAEgASgFEhAKCHVzZXJO",
            "YW1lGAIgASgJEgsKA3NleBgDIAEoBRISCgpvY2N1cGF0aW9uGAQgASgFEgwK",
            "BG5hbWUYBSABKAkSEgoKcGxhdGZvcm1JZBgGIAEoCRIOCgZ6b25lSWQYByAB",
            "KAUSFwoPbWFnaWNTd29yZFBhcmFtGAggASgFEhEKCW1vZGxlVHlwZRgJIAMo",
            "BRIVCg1pbml0RXF1aXBtZW50GAogASgFIm0KEkNyZWF0ZVJvbGVSZXNwb25z",
            "ZRIlCgRyb2xlGAEgASgLMhcuUDUuUHJvdG9idWYuUm9sZVNpbXBsZRIwCgll",
            "cnJvckNvZGUY5wcgASgLMhwuUDUuUHJvdG9idWYuQ29tbW9uRXJyb3JDb2Rl",
            "IiIKDVJvbGVSdW5TdGF0dXMSEQoJcnVuU3RhdHVzGAEgASgFIjoKFVJvbGVS",
            "dW5TdGF0dXNSZXNwb25zZRIOCgZyb2xlSWQYASABKAUSEQoJcnVuU3RhdHVz",
            "GAIgASgFIlQKDFJvbGVQb3NpdGlvbhIPCgdtYXBDb2RlGAEgASgFEgwKBHBv",
            "c1gYAiABKAUSDAoEcG9zWRgDIAEoBRIXCg9jdXJyZW50UG9zVGlja3MYBCAB",
            "KAMi8gIKClJvbGVEZXRhaWwSDgoGcm9sZUlkGAEgASgFEhAKCHJvbGVOYW1l",
            "GAIgASgJEg8KB3JvbGVTZXgYAyABKAUSEgoKb2NjdXBhdGlvbhgEIAEoBRIN",
            "CgVsZXZlbBgFIAEoBRIPCgdmYWN0aW9uGAYgASgFEg8KB21hcENvZGUYByAB",
            "KAUSDAoEcG9zWBgIIAEoBRIMCgRwb3NZGAkgASgFEhUKDXJvbGVEaXJlY3Rp",
            "b24YCiABKAUSDgoGbW9uZXkxGAsgASgFEg4KBm1vbmV5MhgMIAEoBRISCgpl",
            "eHBlcmllbmNlGA0gASgDEg4KBnBrTW9kZRgOIAEoBRIPCgdwa1ZhbHVlGA8g",
            "ASgFEg0KBWxpZmVWGBAgASgFEhAKCG1heExpZmVWGBEgASgFEg4KBm1hZ2lj",
            "VhgSIAEoBRIRCgltYXhNYWdpY1YYEyABKAUSDgoGYmFnTnVtGBUgASgFEhAK",
            "CGxvZ2luTnVtGB8gASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::P5.Protobuf.CommonReflection.Descriptor, global::P5.Protobuf.SkillReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleList), global::P5.Protobuf.RoleList.Parser, new[]{ "Userid", "ZoneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleListResponse), global::P5.Protobuf.RoleListResponse.Parser, new[]{ "RoleCount", "Roles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleSimple), global::P5.Protobuf.RoleSimple.Parser, new[]{ "RoleId", "Sex", "Occupation", "Name", "Level", "ChangeLifeCount", "PreDelLeftSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.CreateRole), global::P5.Protobuf.CreateRole.Parser, new[]{ "UserId", "UserName", "Sex", "Occupation", "Name", "PlatformId", "ZoneId", "MagicSwordParam", "ModleType", "InitEquipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.CreateRoleResponse), global::P5.Protobuf.CreateRoleResponse.Parser, new[]{ "Role", "ErrorCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleRunStatus), global::P5.Protobuf.RoleRunStatus.Parser, new[]{ "RunStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleRunStatusResponse), global::P5.Protobuf.RoleRunStatusResponse.Parser, new[]{ "RoleId", "RunStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RolePosition), global::P5.Protobuf.RolePosition.Parser, new[]{ "MapCode", "PosX", "PosY", "CurrentPosTicks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.RoleDetail), global::P5.Protobuf.RoleDetail.Parser, new[]{ "RoleId", "RoleName", "RoleSex", "Occupation", "Level", "Faction", "MapCode", "PosX", "PosY", "RoleDirection", "Money1", "Money2", "Experience", "PkMode", "PkValue", "LifeV", "MaxLifeV", "MagicV", "MaxMagicV", "BagNum", "LoginNum" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///角色列表
  /// </summary>
  public sealed partial class RoleList : pb::IMessage<RoleList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleList> _parser = new pb::MessageParser<RoleList>(() => new RoleList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleList(RoleList other) : this() {
      userid_ = other.userid_;
      zoneId_ = other.zoneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleList Clone() {
      return new RoleList(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private int userid_;
    /// <summary>
    ///userId (數字) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "zoneId" field.</summary>
    public const int ZoneIdFieldNumber = 2;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (ZoneId != other.ZoneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Userid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Userid);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Userid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Userid);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ZoneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleList other) {
      if (other == null) {
        return;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Userid = input.ReadInt32();
            break;
          }
          case 16: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Userid = input.ReadInt32();
            break;
          }
          case 16: {
            ZoneId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///角色列表回傳
  /// </summary>
  public sealed partial class RoleListResponse : pb::IMessage<RoleListResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleListResponse> _parser = new pb::MessageParser<RoleListResponse>(() => new RoleListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleListResponse(RoleListResponse other) : this() {
      roleCount_ = other.roleCount_;
      roles_ = other.roles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleListResponse Clone() {
      return new RoleListResponse(this);
    }

    /// <summary>Field number for the "roleCount" field.</summary>
    public const int RoleCountFieldNumber = 1;
    private int roleCount_;
    /// <summary>
    ///角色數量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleCount {
      get { return roleCount_; }
      set {
        roleCount_ = value;
      }
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::P5.Protobuf.RoleSimple> _repeated_roles_codec
        = pb::FieldCodec.ForMessage(18, global::P5.Protobuf.RoleSimple.Parser);
    private readonly pbc::RepeatedField<global::P5.Protobuf.RoleSimple> roles_ = new pbc::RepeatedField<global::P5.Protobuf.RoleSimple>();
    /// <summary>
    ///角色內容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::P5.Protobuf.RoleSimple> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleCount != other.RoleCount) return false;
      if(!roles_.Equals(other.roles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleCount != 0) hash ^= RoleCount.GetHashCode();
      hash ^= roles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoleCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleCount);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoleCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleCount);
      }
      roles_.WriteTo(ref output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleCount);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleListResponse other) {
      if (other == null) {
        return;
      }
      if (other.RoleCount != 0) {
        RoleCount = other.RoleCount;
      }
      roles_.Add(other.roles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleCount = input.ReadInt32();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoleCount = input.ReadInt32();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(ref input, _repeated_roles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///角色簡易資料
  /// </summary>
  public sealed partial class RoleSimple : pb::IMessage<RoleSimple>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleSimple> _parser = new pb::MessageParser<RoleSimple>(() => new RoleSimple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleSimple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleSimple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleSimple(RoleSimple other) : this() {
      roleId_ = other.roleId_;
      sex_ = other.sex_;
      occupation_ = other.occupation_;
      name_ = other.name_;
      level_ = other.level_;
      changeLifeCount_ = other.changeLifeCount_;
      preDelLeftSeconds_ = other.preDelLeftSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleSimple Clone() {
      return new RoleSimple(this);
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private int roleId_;
    /// <summary>
    ///角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 2;
    private int sex_;
    /// <summary>
    ///性別
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "occupation" field.</summary>
    public const int OccupationFieldNumber = 3;
    private int occupation_;
    /// <summary>
    ///職業
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Occupation {
      get { return occupation_; }
      set {
        occupation_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///角色名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    ///等級
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "changeLifeCount" field.</summary>
    public const int ChangeLifeCountFieldNumber = 6;
    private int changeLifeCount_;
    /// <summary>
    ///重生次數  (用途不明)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeLifeCount {
      get { return changeLifeCount_; }
      set {
        changeLifeCount_ = value;
      }
    }

    /// <summary>Field number for the "preDelLeftSeconds" field.</summary>
    public const int PreDelLeftSecondsFieldNumber = 7;
    private int preDelLeftSeconds_;
    /// <summary>
    ///刪除角色剩餘的時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PreDelLeftSeconds {
      get { return preDelLeftSeconds_; }
      set {
        preDelLeftSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleSimple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleSimple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      if (Sex != other.Sex) return false;
      if (Occupation != other.Occupation) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (ChangeLifeCount != other.ChangeLifeCount) return false;
      if (PreDelLeftSeconds != other.PreDelLeftSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Occupation != 0) hash ^= Occupation.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (ChangeLifeCount != 0) hash ^= ChangeLifeCount.GetHashCode();
      if (PreDelLeftSeconds != 0) hash ^= PreDelLeftSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (Sex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Occupation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (ChangeLifeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChangeLifeCount);
      }
      if (PreDelLeftSeconds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PreDelLeftSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (Sex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Occupation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (ChangeLifeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChangeLifeCount);
      }
      if (PreDelLeftSeconds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PreDelLeftSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (Occupation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Occupation);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (ChangeLifeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeLifeCount);
      }
      if (PreDelLeftSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreDelLeftSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleSimple other) {
      if (other == null) {
        return;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Occupation != 0) {
        Occupation = other.Occupation;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.ChangeLifeCount != 0) {
        ChangeLifeCount = other.ChangeLifeCount;
      }
      if (other.PreDelLeftSeconds != 0) {
        PreDelLeftSeconds = other.PreDelLeftSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 16: {
            Sex = input.ReadInt32();
            break;
          }
          case 24: {
            Occupation = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            ChangeLifeCount = input.ReadInt32();
            break;
          }
          case 56: {
            PreDelLeftSeconds = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 16: {
            Sex = input.ReadInt32();
            break;
          }
          case 24: {
            Occupation = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            ChangeLifeCount = input.ReadInt32();
            break;
          }
          case 56: {
            PreDelLeftSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///創建角色
  /// </summary>
  public sealed partial class CreateRole : pb::IMessage<CreateRole>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateRole> _parser = new pb::MessageParser<CreateRole>(() => new CreateRole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRole(CreateRole other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      sex_ = other.sex_;
      occupation_ = other.occupation_;
      name_ = other.name_;
      platformId_ = other.platformId_;
      zoneId_ = other.zoneId_;
      magicSwordParam_ = other.magicSwordParam_;
      modleType_ = other.modleType_.Clone();
      initEquipment_ = other.initEquipment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRole Clone() {
      return new CreateRole(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///使用者id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///使用者名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 3;
    private int sex_;
    /// <summary>
    ///性別
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "occupation" field.</summary>
    public const int OccupationFieldNumber = 4;
    private int occupation_;
    /// <summary>
    ///職業
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Occupation {
      get { return occupation_; }
      set {
        occupation_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    ///角色名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platformId" field.</summary>
    public const int PlatformIdFieldNumber = 6;
    private string platformId_ = "";
    /// <summary>
    ///平台id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformId {
      get { return platformId_; }
      set {
        platformId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zoneId" field.</summary>
    public const int ZoneIdFieldNumber = 7;
    private int zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "magicSwordParam" field.</summary>
    public const int MagicSwordParamFieldNumber = 8;
    private int magicSwordParam_;
    /// <summary>
    ///魔劍士的參數  用途不明  只有創建魔劍士會需要  0=力量型 1=智慧型  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicSwordParam {
      get { return magicSwordParam_; }
      set {
        magicSwordParam_ = value;
      }
    }

    /// <summary>Field number for the "modleType" field.</summary>
    public const int ModleTypeFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_modleType_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> modleType_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///四個參數     在DB會以string儲存(逗號分隔) ex: 1,1,1,1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ModleType {
      get { return modleType_; }
    }

    /// <summary>Field number for the "initEquipment" field.</summary>
    public const int InitEquipmentFieldNumber = 10;
    private int initEquipment_;
    /// <summary>
    ///初始裝備的index,  SystemParams裡的CreateRoleGiveGoodsIDs_{職業ID} 是條array 代表不同的裝備,這個參數是選擇送這條array的第幾個 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitEquipment {
      get { return initEquipment_; }
      set {
        initEquipment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (Sex != other.Sex) return false;
      if (Occupation != other.Occupation) return false;
      if (Name != other.Name) return false;
      if (PlatformId != other.PlatformId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (MagicSwordParam != other.MagicSwordParam) return false;
      if(!modleType_.Equals(other.modleType_)) return false;
      if (InitEquipment != other.InitEquipment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Occupation != 0) hash ^= Occupation.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PlatformId.Length != 0) hash ^= PlatformId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (MagicSwordParam != 0) hash ^= MagicSwordParam.GetHashCode();
      hash ^= modleType_.GetHashCode();
      if (InitEquipment != 0) hash ^= InitEquipment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Sex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Occupation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (PlatformId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlatformId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ZoneId);
      }
      if (MagicSwordParam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MagicSwordParam);
      }
      modleType_.WriteTo(output, _repeated_modleType_codec);
      if (InitEquipment != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InitEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Sex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Occupation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (PlatformId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlatformId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ZoneId);
      }
      if (MagicSwordParam != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MagicSwordParam);
      }
      modleType_.WriteTo(ref output, _repeated_modleType_codec);
      if (InitEquipment != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InitEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (Occupation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Occupation);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PlatformId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (MagicSwordParam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicSwordParam);
      }
      size += modleType_.CalculateSize(_repeated_modleType_codec);
      if (InitEquipment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitEquipment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRole other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Occupation != 0) {
        Occupation = other.Occupation;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PlatformId.Length != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.MagicSwordParam != 0) {
        MagicSwordParam = other.MagicSwordParam;
      }
      modleType_.Add(other.modleType_);
      if (other.InitEquipment != 0) {
        InitEquipment = other.InitEquipment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            Sex = input.ReadInt32();
            break;
          }
          case 32: {
            Occupation = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            PlatformId = input.ReadString();
            break;
          }
          case 56: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 64: {
            MagicSwordParam = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            modleType_.AddEntriesFrom(input, _repeated_modleType_codec);
            break;
          }
          case 80: {
            InitEquipment = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            Sex = input.ReadInt32();
            break;
          }
          case 32: {
            Occupation = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            PlatformId = input.ReadString();
            break;
          }
          case 56: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 64: {
            MagicSwordParam = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            modleType_.AddEntriesFrom(ref input, _repeated_modleType_codec);
            break;
          }
          case 80: {
            InitEquipment = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///創建角色回傳
  /// </summary>
  public sealed partial class CreateRoleResponse : pb::IMessage<CreateRoleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateRoleResponse> _parser = new pb::MessageParser<CreateRoleResponse>(() => new CreateRoleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoleResponse(CreateRoleResponse other) : this() {
      role_ = other.role_ != null ? other.role_.Clone() : null;
      errorCode_ = other.errorCode_ != null ? other.errorCode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoleResponse Clone() {
      return new CreateRoleResponse(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private global::P5.Protobuf.RoleSimple role_;
    /// <summary>
    ///創建出的角色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P5.Protobuf.RoleSimple Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 999;
    private global::P5.Protobuf.CommonErrorCode errorCode_;
    /// <summary>
    ///錯誤碼 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P5.Protobuf.CommonErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Role, other.Role)) return false;
      if (!object.Equals(ErrorCode, other.ErrorCode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (role_ != null) hash ^= Role.GetHashCode();
      if (errorCode_ != null) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (role_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Role);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (role_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Role);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (role_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Role);
      }
      if (errorCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoleResponse other) {
      if (other == null) {
        return;
      }
      if (other.role_ != null) {
        if (role_ == null) {
          Role = new global::P5.Protobuf.RoleSimple();
        }
        Role.MergeFrom(other.Role);
      }
      if (other.errorCode_ != null) {
        if (errorCode_ == null) {
          ErrorCode = new global::P5.Protobuf.CommonErrorCode();
        }
        ErrorCode.MergeFrom(other.ErrorCode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (role_ == null) {
              Role = new global::P5.Protobuf.RoleSimple();
            }
            input.ReadMessage(Role);
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (role_ == null) {
              Role = new global::P5.Protobuf.RoleSimple();
            }
            input.ReadMessage(Role);
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///角色跑步狀態
  /// </summary>
  public sealed partial class RoleRunStatus : pb::IMessage<RoleRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleRunStatus> _parser = new pb::MessageParser<RoleRunStatus>(() => new RoleRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatus(RoleRunStatus other) : this() {
      runStatus_ = other.runStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatus Clone() {
      return new RoleRunStatus(this);
    }

    /// <summary>Field number for the "runStatus" field.</summary>
    public const int RunStatusFieldNumber = 1;
    private int runStatus_;
    /// <summary>
    ///跑步狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RunStatus {
      get { return runStatus_; }
      set {
        runStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RunStatus != other.RunStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RunStatus != 0) hash ^= RunStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RunStatus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RunStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RunStatus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RunStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RunStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RunStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleRunStatus other) {
      if (other == null) {
        return;
      }
      if (other.RunStatus != 0) {
        RunStatus = other.RunStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RunStatus = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RunStatus = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///角色跑步狀態回傳
  /// </summary>
  public sealed partial class RoleRunStatusResponse : pb::IMessage<RoleRunStatusResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleRunStatusResponse> _parser = new pb::MessageParser<RoleRunStatusResponse>(() => new RoleRunStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleRunStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatusResponse(RoleRunStatusResponse other) : this() {
      roleId_ = other.roleId_;
      runStatus_ = other.runStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleRunStatusResponse Clone() {
      return new RoleRunStatusResponse(this);
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private int roleId_;
    /// <summary>
    ///角色Id   (這會提醒周圍的人,所以需要判斷角色id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "runStatus" field.</summary>
    public const int RunStatusFieldNumber = 2;
    private int runStatus_;
    /// <summary>
    ///跑步狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RunStatus {
      get { return runStatus_; }
      set {
        runStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleRunStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleRunStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      if (RunStatus != other.RunStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (RunStatus != 0) hash ^= RunStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (RunStatus != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RunStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (RunStatus != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RunStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (RunStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RunStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleRunStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.RunStatus != 0) {
        RunStatus = other.RunStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 16: {
            RunStatus = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 16: {
            RunStatus = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///位置資料
  /// </summary>
  public sealed partial class RolePosition : pb::IMessage<RolePosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RolePosition> _parser = new pb::MessageParser<RolePosition>(() => new RolePosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RolePosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePosition(RolePosition other) : this() {
      mapCode_ = other.mapCode_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      currentPosTicks_ = other.currentPosTicks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePosition Clone() {
      return new RolePosition(this);
    }

    /// <summary>Field number for the "mapCode" field.</summary>
    public const int MapCodeFieldNumber = 1;
    private int mapCode_;
    /// <summary>
    ///地圖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapCode {
      get { return mapCode_; }
      set {
        mapCode_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 2;
    private int posX_;
    /// <summary>
    ///X座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 3;
    private int posY_;
    /// <summary>
    ///Y座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "currentPosTicks" field.</summary>
    public const int CurrentPosTicksFieldNumber = 4;
    private long currentPosTicks_;
    /// <summary>
    ///當前時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentPosTicks {
      get { return currentPosTicks_; }
      set {
        currentPosTicks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RolePosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RolePosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapCode != other.MapCode) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (CurrentPosTicks != other.CurrentPosTicks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapCode != 0) hash ^= MapCode.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      if (CurrentPosTicks != 0L) hash ^= CurrentPosTicks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapCode);
      }
      if (PosX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosY);
      }
      if (CurrentPosTicks != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrentPosTicks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapCode);
      }
      if (PosX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosY);
      }
      if (CurrentPosTicks != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrentPosTicks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapCode);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (CurrentPosTicks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentPosTicks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RolePosition other) {
      if (other == null) {
        return;
      }
      if (other.MapCode != 0) {
        MapCode = other.MapCode;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      if (other.CurrentPosTicks != 0L) {
        CurrentPosTicks = other.CurrentPosTicks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapCode = input.ReadInt32();
            break;
          }
          case 16: {
            PosX = input.ReadInt32();
            break;
          }
          case 24: {
            PosY = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentPosTicks = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapCode = input.ReadInt32();
            break;
          }
          case 16: {
            PosX = input.ReadInt32();
            break;
          }
          case 24: {
            PosY = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentPosTicks = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///角色詳細資料
  /// </summary>
  public sealed partial class RoleDetail : pb::IMessage<RoleDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoleDetail> _parser = new pb::MessageParser<RoleDetail>(() => new RoleDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.RoleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDetail(RoleDetail other) : this() {
      roleId_ = other.roleId_;
      roleName_ = other.roleName_;
      roleSex_ = other.roleSex_;
      occupation_ = other.occupation_;
      level_ = other.level_;
      faction_ = other.faction_;
      mapCode_ = other.mapCode_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      roleDirection_ = other.roleDirection_;
      money1_ = other.money1_;
      money2_ = other.money2_;
      experience_ = other.experience_;
      pkMode_ = other.pkMode_;
      pkValue_ = other.pkValue_;
      lifeV_ = other.lifeV_;
      maxLifeV_ = other.maxLifeV_;
      magicV_ = other.magicV_;
      maxMagicV_ = other.maxMagicV_;
      bagNum_ = other.bagNum_;
      loginNum_ = other.loginNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDetail Clone() {
      return new RoleDetail(this);
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private int roleId_;
    /// <summary>
    ///id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "roleName" field.</summary>
    public const int RoleNameFieldNumber = 2;
    private string roleName_ = "";
    /// <summary>
    ///名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleName {
      get { return roleName_; }
      set {
        roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roleSex" field.</summary>
    public const int RoleSexFieldNumber = 3;
    private int roleSex_;
    /// <summary>
    ///性別
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleSex {
      get { return roleSex_; }
      set {
        roleSex_ = value;
      }
    }

    /// <summary>Field number for the "occupation" field.</summary>
    public const int OccupationFieldNumber = 4;
    private int occupation_;
    /// <summary>
    ///職業
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Occupation {
      get { return occupation_; }
      set {
        occupation_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    ///等級
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 6;
    private int faction_;
    /// <summary>
    ///公會
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "mapCode" field.</summary>
    public const int MapCodeFieldNumber = 7;
    private int mapCode_;
    /// <summary>
    ///所在地圖id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapCode {
      get { return mapCode_; }
      set {
        mapCode_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 8;
    private int posX_;
    /// <summary>
    ///當前x座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 9;
    private int posY_;
    /// <summary>
    ///當前y座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "roleDirection" field.</summary>
    public const int RoleDirectionFieldNumber = 10;
    private int roleDirection_;
    /// <summary>
    ///面向的方向 0~7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleDirection {
      get { return roleDirection_; }
      set {
        roleDirection_ = value;
      }
    }

    /// <summary>Field number for the "money1" field.</summary>
    public const int Money1FieldNumber = 11;
    private int money1_;
    /// <summary>
    ///------------- 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money1 {
      get { return money1_; }
      set {
        money1_ = value;
      }
    }

    /// <summary>Field number for the "money2" field.</summary>
    public const int Money2FieldNumber = 12;
    private int money2_;
    /// <summary>
    ///貨幣2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money2 {
      get { return money2_; }
      set {
        money2_ = value;
      }
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 13;
    private long experience_;
    /// <summary>
    ///經驗值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "pkMode" field.</summary>
    public const int PkModeFieldNumber = 14;
    private int pkMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PkMode {
      get { return pkMode_; }
      set {
        pkMode_ = value;
      }
    }

    /// <summary>Field number for the "pkValue" field.</summary>
    public const int PkValueFieldNumber = 15;
    private int pkValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PkValue {
      get { return pkValue_; }
      set {
        pkValue_ = value;
      }
    }

    /// <summary>Field number for the "lifeV" field.</summary>
    public const int LifeVFieldNumber = 16;
    private int lifeV_;
    /// <summary>
    ///生命
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LifeV {
      get { return lifeV_; }
      set {
        lifeV_ = value;
      }
    }

    /// <summary>Field number for the "maxLifeV" field.</summary>
    public const int MaxLifeVFieldNumber = 17;
    private int maxLifeV_;
    /// <summary>
    ///最大生命
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxLifeV {
      get { return maxLifeV_; }
      set {
        maxLifeV_ = value;
      }
    }

    /// <summary>Field number for the "magicV" field.</summary>
    public const int MagicVFieldNumber = 18;
    private int magicV_;
    /// <summary>
    ///魔力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicV {
      get { return magicV_; }
      set {
        magicV_ = value;
      }
    }

    /// <summary>Field number for the "maxMagicV" field.</summary>
    public const int MaxMagicVFieldNumber = 19;
    private int maxMagicV_;
    /// <summary>
    ///最大魔力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMagicV {
      get { return maxMagicV_; }
      set {
        maxMagicV_ = value;
      }
    }

    /// <summary>Field number for the "bagNum" field.</summary>
    public const int BagNumFieldNumber = 21;
    private int bagNum_;
    /// <summary>
    ///int32 rolePic = 20;		//看起來沒用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BagNum {
      get { return bagNum_; }
      set {
        bagNum_ = value;
      }
    }

    /// <summary>Field number for the "loginNum" field.</summary>
    public const int LoginNumFieldNumber = 31;
    private int loginNum_;
    /// <summary>
    ///登入次數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoginNum {
      get { return loginNum_; }
      set {
        loginNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      if (RoleName != other.RoleName) return false;
      if (RoleSex != other.RoleSex) return false;
      if (Occupation != other.Occupation) return false;
      if (Level != other.Level) return false;
      if (Faction != other.Faction) return false;
      if (MapCode != other.MapCode) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      if (RoleDirection != other.RoleDirection) return false;
      if (Money1 != other.Money1) return false;
      if (Money2 != other.Money2) return false;
      if (Experience != other.Experience) return false;
      if (PkMode != other.PkMode) return false;
      if (PkValue != other.PkValue) return false;
      if (LifeV != other.LifeV) return false;
      if (MaxLifeV != other.MaxLifeV) return false;
      if (MagicV != other.MagicV) return false;
      if (MaxMagicV != other.MaxMagicV) return false;
      if (BagNum != other.BagNum) return false;
      if (LoginNum != other.LoginNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
      if (RoleSex != 0) hash ^= RoleSex.GetHashCode();
      if (Occupation != 0) hash ^= Occupation.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (MapCode != 0) hash ^= MapCode.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      if (RoleDirection != 0) hash ^= RoleDirection.GetHashCode();
      if (Money1 != 0) hash ^= Money1.GetHashCode();
      if (Money2 != 0) hash ^= Money2.GetHashCode();
      if (Experience != 0L) hash ^= Experience.GetHashCode();
      if (PkMode != 0) hash ^= PkMode.GetHashCode();
      if (PkValue != 0) hash ^= PkValue.GetHashCode();
      if (LifeV != 0) hash ^= LifeV.GetHashCode();
      if (MaxLifeV != 0) hash ^= MaxLifeV.GetHashCode();
      if (MagicV != 0) hash ^= MagicV.GetHashCode();
      if (MaxMagicV != 0) hash ^= MaxMagicV.GetHashCode();
      if (BagNum != 0) hash ^= BagNum.GetHashCode();
      if (LoginNum != 0) hash ^= LoginNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (RoleName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoleName);
      }
      if (RoleSex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoleSex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Occupation);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (Faction != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Faction);
      }
      if (MapCode != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MapCode);
      }
      if (PosX != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PosY);
      }
      if (RoleDirection != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleDirection);
      }
      if (Money1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Money1);
      }
      if (Money2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Money2);
      }
      if (Experience != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Experience);
      }
      if (PkMode != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PkMode);
      }
      if (PkValue != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(PkValue);
      }
      if (LifeV != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(LifeV);
      }
      if (MaxLifeV != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MaxLifeV);
      }
      if (MagicV != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MagicV);
      }
      if (MaxMagicV != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(MaxMagicV);
      }
      if (BagNum != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(BagNum);
      }
      if (LoginNum != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(LoginNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleId);
      }
      if (RoleName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoleName);
      }
      if (RoleSex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoleSex);
      }
      if (Occupation != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Occupation);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (Faction != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Faction);
      }
      if (MapCode != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MapCode);
      }
      if (PosX != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PosY);
      }
      if (RoleDirection != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleDirection);
      }
      if (Money1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Money1);
      }
      if (Money2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Money2);
      }
      if (Experience != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Experience);
      }
      if (PkMode != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PkMode);
      }
      if (PkValue != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(PkValue);
      }
      if (LifeV != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(LifeV);
      }
      if (MaxLifeV != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MaxLifeV);
      }
      if (MagicV != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MagicV);
      }
      if (MaxMagicV != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(MaxMagicV);
      }
      if (BagNum != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(BagNum);
      }
      if (LoginNum != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(LoginNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (RoleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
      }
      if (RoleSex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleSex);
      }
      if (Occupation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Occupation);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Faction);
      }
      if (MapCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapCode);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (RoleDirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleDirection);
      }
      if (Money1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money1);
      }
      if (Money2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money2);
      }
      if (Experience != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Experience);
      }
      if (PkMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PkMode);
      }
      if (PkValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PkValue);
      }
      if (LifeV != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LifeV);
      }
      if (MaxLifeV != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxLifeV);
      }
      if (MagicV != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MagicV);
      }
      if (MaxMagicV != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxMagicV);
      }
      if (BagNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BagNum);
      }
      if (LoginNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LoginNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleDetail other) {
      if (other == null) {
        return;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.RoleName.Length != 0) {
        RoleName = other.RoleName;
      }
      if (other.RoleSex != 0) {
        RoleSex = other.RoleSex;
      }
      if (other.Occupation != 0) {
        Occupation = other.Occupation;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      if (other.MapCode != 0) {
        MapCode = other.MapCode;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      if (other.RoleDirection != 0) {
        RoleDirection = other.RoleDirection;
      }
      if (other.Money1 != 0) {
        Money1 = other.Money1;
      }
      if (other.Money2 != 0) {
        Money2 = other.Money2;
      }
      if (other.Experience != 0L) {
        Experience = other.Experience;
      }
      if (other.PkMode != 0) {
        PkMode = other.PkMode;
      }
      if (other.PkValue != 0) {
        PkValue = other.PkValue;
      }
      if (other.LifeV != 0) {
        LifeV = other.LifeV;
      }
      if (other.MaxLifeV != 0) {
        MaxLifeV = other.MaxLifeV;
      }
      if (other.MagicV != 0) {
        MagicV = other.MagicV;
      }
      if (other.MaxMagicV != 0) {
        MaxMagicV = other.MaxMagicV;
      }
      if (other.BagNum != 0) {
        BagNum = other.BagNum;
      }
      if (other.LoginNum != 0) {
        LoginNum = other.LoginNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 18: {
            RoleName = input.ReadString();
            break;
          }
          case 24: {
            RoleSex = input.ReadInt32();
            break;
          }
          case 32: {
            Occupation = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            Faction = input.ReadInt32();
            break;
          }
          case 56: {
            MapCode = input.ReadInt32();
            break;
          }
          case 64: {
            PosX = input.ReadInt32();
            break;
          }
          case 72: {
            PosY = input.ReadInt32();
            break;
          }
          case 80: {
            RoleDirection = input.ReadInt32();
            break;
          }
          case 88: {
            Money1 = input.ReadInt32();
            break;
          }
          case 96: {
            Money2 = input.ReadInt32();
            break;
          }
          case 104: {
            Experience = input.ReadInt64();
            break;
          }
          case 112: {
            PkMode = input.ReadInt32();
            break;
          }
          case 120: {
            PkValue = input.ReadInt32();
            break;
          }
          case 128: {
            LifeV = input.ReadInt32();
            break;
          }
          case 136: {
            MaxLifeV = input.ReadInt32();
            break;
          }
          case 144: {
            MagicV = input.ReadInt32();
            break;
          }
          case 152: {
            MaxMagicV = input.ReadInt32();
            break;
          }
          case 168: {
            BagNum = input.ReadInt32();
            break;
          }
          case 248: {
            LoginNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoleId = input.ReadInt32();
            break;
          }
          case 18: {
            RoleName = input.ReadString();
            break;
          }
          case 24: {
            RoleSex = input.ReadInt32();
            break;
          }
          case 32: {
            Occupation = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            Faction = input.ReadInt32();
            break;
          }
          case 56: {
            MapCode = input.ReadInt32();
            break;
          }
          case 64: {
            PosX = input.ReadInt32();
            break;
          }
          case 72: {
            PosY = input.ReadInt32();
            break;
          }
          case 80: {
            RoleDirection = input.ReadInt32();
            break;
          }
          case 88: {
            Money1 = input.ReadInt32();
            break;
          }
          case 96: {
            Money2 = input.ReadInt32();
            break;
          }
          case 104: {
            Experience = input.ReadInt64();
            break;
          }
          case 112: {
            PkMode = input.ReadInt32();
            break;
          }
          case 120: {
            PkValue = input.ReadInt32();
            break;
          }
          case 128: {
            LifeV = input.ReadInt32();
            break;
          }
          case 136: {
            MaxLifeV = input.ReadInt32();
            break;
          }
          case 144: {
            MagicV = input.ReadInt32();
            break;
          }
          case 152: {
            MaxMagicV = input.ReadInt32();
            break;
          }
          case 168: {
            BagNum = input.ReadInt32();
            break;
          }
          case 248: {
            LoginNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
