// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Map.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace P5.Protobuf {

  /// <summary>Holder for reflection information generated from Map.proto</summary>
  public static partial class MapReflection {

    #region Descriptor
    /// <summary>File descriptor for Map.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglNYXAucHJvdG8SC1A1LlByb3RvYnVmGgxDb21tb24ucHJvdG8igAEKCU1h",
            "cENoYW5nZRISCgp0ZWxlcG9ydElkGAEgASgFEhIKCm5ld01hcENvZGUYAiAB",
            "KAUSEQoJdG9OZXdNYXBYGAMgASgFEhEKCXRvTmV3TWFwWRgEIAEoBRIWCg50",
            "b05ld0RpcmVjdGlvbhgFIAEoBRINCgVzdGF0ZRgGIAEoBSKXAQoRTWFwQ2hh",
            "bmdlUmVzcG9uc2USEgoKbmV3TWFwQ29kZRgBIAEoBRIRCgl0b05ld01hcFgY",
            "AiABKAUSEQoJdG9OZXdNYXBZGAMgASgFEhYKDnRvTmV3RGlyZWN0aW9uGAQg",
            "ASgFEjAKCWVycm9yQ29kZRjnByABKAsyHC5QNS5Qcm90b2J1Zi5Db21tb25F",
            "cnJvckNvZGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::P5.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.MapChange), global::P5.Protobuf.MapChange.Parser, new[]{ "TeleportId", "NewMapCode", "ToNewMapX", "ToNewMapY", "ToNewDirection", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.MapChangeResponse), global::P5.Protobuf.MapChangeResponse.Parser, new[]{ "NewMapCode", "ToNewMapX", "ToNewMapY", "ToNewDirection", "ErrorCode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///換地圖
  /// </summary>
  public sealed partial class MapChange : pb::IMessage<MapChange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapChange> _parser = new pb::MessageParser<MapChange>(() => new MapChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.MapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChange(MapChange other) : this() {
      teleportId_ = other.teleportId_;
      newMapCode_ = other.newMapCode_;
      toNewMapX_ = other.toNewMapX_;
      toNewMapY_ = other.toNewMapY_;
      toNewDirection_ = other.toNewDirection_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChange Clone() {
      return new MapChange(this);
    }

    /// <summary>Field number for the "teleportId" field.</summary>
    public const int TeleportIdFieldNumber = 1;
    private int teleportId_;
    /// <summary>
    ///傳送點
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeleportId {
      get { return teleportId_; }
      set {
        teleportId_ = value;
      }
    }

    /// <summary>Field number for the "newMapCode" field.</summary>
    public const int NewMapCodeFieldNumber = 2;
    private int newMapCode_;
    /// <summary>
    ///新地圖碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewMapCode {
      get { return newMapCode_; }
      set {
        newMapCode_ = value;
      }
    }

    /// <summary>Field number for the "toNewMapX" field.</summary>
    public const int ToNewMapXFieldNumber = 3;
    private int toNewMapX_;
    /// <summary>
    ///新地圖的X座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewMapX {
      get { return toNewMapX_; }
      set {
        toNewMapX_ = value;
      }
    }

    /// <summary>Field number for the "toNewMapY" field.</summary>
    public const int ToNewMapYFieldNumber = 4;
    private int toNewMapY_;
    /// <summary>
    ///新地圖的Y座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewMapY {
      get { return toNewMapY_; }
      set {
        toNewMapY_ = value;
      }
    }

    /// <summary>Field number for the "toNewDirection" field.</summary>
    public const int ToNewDirectionFieldNumber = 5;
    private int toNewDirection_;
    /// <summary>
    ///新地圖的方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewDirection {
      get { return toNewDirection_; }
      set {
        toNewDirection_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private int state_;
    /// <summary>
    ///狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeleportId != other.TeleportId) return false;
      if (NewMapCode != other.NewMapCode) return false;
      if (ToNewMapX != other.ToNewMapX) return false;
      if (ToNewMapY != other.ToNewMapY) return false;
      if (ToNewDirection != other.ToNewDirection) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeleportId != 0) hash ^= TeleportId.GetHashCode();
      if (NewMapCode != 0) hash ^= NewMapCode.GetHashCode();
      if (ToNewMapX != 0) hash ^= ToNewMapX.GetHashCode();
      if (ToNewMapY != 0) hash ^= ToNewMapY.GetHashCode();
      if (ToNewDirection != 0) hash ^= ToNewDirection.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TeleportId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TeleportId);
      }
      if (NewMapCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewMapCode);
      }
      if (ToNewMapX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ToNewDirection);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TeleportId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TeleportId);
      }
      if (NewMapCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewMapCode);
      }
      if (ToNewMapX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ToNewDirection);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeleportId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeleportId);
      }
      if (NewMapCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewMapCode);
      }
      if (ToNewMapX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewDirection);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapChange other) {
      if (other == null) {
        return;
      }
      if (other.TeleportId != 0) {
        TeleportId = other.TeleportId;
      }
      if (other.NewMapCode != 0) {
        NewMapCode = other.NewMapCode;
      }
      if (other.ToNewMapX != 0) {
        ToNewMapX = other.ToNewMapX;
      }
      if (other.ToNewMapY != 0) {
        ToNewMapY = other.ToNewMapY;
      }
      if (other.ToNewDirection != 0) {
        ToNewDirection = other.ToNewDirection;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeleportId = input.ReadInt32();
            break;
          }
          case 16: {
            NewMapCode = input.ReadInt32();
            break;
          }
          case 24: {
            ToNewMapX = input.ReadInt32();
            break;
          }
          case 32: {
            ToNewMapY = input.ReadInt32();
            break;
          }
          case 40: {
            ToNewDirection = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TeleportId = input.ReadInt32();
            break;
          }
          case 16: {
            NewMapCode = input.ReadInt32();
            break;
          }
          case 24: {
            ToNewMapX = input.ReadInt32();
            break;
          }
          case 32: {
            ToNewMapY = input.ReadInt32();
            break;
          }
          case 40: {
            ToNewDirection = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapChangeResponse : pb::IMessage<MapChangeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapChangeResponse> _parser = new pb::MessageParser<MapChangeResponse>(() => new MapChangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapChangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.MapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChangeResponse(MapChangeResponse other) : this() {
      newMapCode_ = other.newMapCode_;
      toNewMapX_ = other.toNewMapX_;
      toNewMapY_ = other.toNewMapY_;
      toNewDirection_ = other.toNewDirection_;
      errorCode_ = other.errorCode_ != null ? other.errorCode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChangeResponse Clone() {
      return new MapChangeResponse(this);
    }

    /// <summary>Field number for the "newMapCode" field.</summary>
    public const int NewMapCodeFieldNumber = 1;
    private int newMapCode_;
    /// <summary>
    ///新地圖碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewMapCode {
      get { return newMapCode_; }
      set {
        newMapCode_ = value;
      }
    }

    /// <summary>Field number for the "toNewMapX" field.</summary>
    public const int ToNewMapXFieldNumber = 2;
    private int toNewMapX_;
    /// <summary>
    ///新地圖的X座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewMapX {
      get { return toNewMapX_; }
      set {
        toNewMapX_ = value;
      }
    }

    /// <summary>Field number for the "toNewMapY" field.</summary>
    public const int ToNewMapYFieldNumber = 3;
    private int toNewMapY_;
    /// <summary>
    ///新地圖的Y座標
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewMapY {
      get { return toNewMapY_; }
      set {
        toNewMapY_ = value;
      }
    }

    /// <summary>Field number for the "toNewDirection" field.</summary>
    public const int ToNewDirectionFieldNumber = 4;
    private int toNewDirection_;
    /// <summary>
    ///新地圖的方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToNewDirection {
      get { return toNewDirection_; }
      set {
        toNewDirection_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 999;
    private global::P5.Protobuf.CommonErrorCode errorCode_;
    /// <summary>
    ///errorCode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P5.Protobuf.CommonErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapChangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapChangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewMapCode != other.NewMapCode) return false;
      if (ToNewMapX != other.ToNewMapX) return false;
      if (ToNewMapY != other.ToNewMapY) return false;
      if (ToNewDirection != other.ToNewDirection) return false;
      if (!object.Equals(ErrorCode, other.ErrorCode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewMapCode != 0) hash ^= NewMapCode.GetHashCode();
      if (ToNewMapX != 0) hash ^= ToNewMapX.GetHashCode();
      if (ToNewMapY != 0) hash ^= ToNewMapY.GetHashCode();
      if (ToNewDirection != 0) hash ^= ToNewDirection.GetHashCode();
      if (errorCode_ != null) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewMapCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewMapCode);
      }
      if (ToNewMapX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ToNewDirection);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewMapCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewMapCode);
      }
      if (ToNewMapX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ToNewDirection);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewMapCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewMapCode);
      }
      if (ToNewMapX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewMapX);
      }
      if (ToNewMapY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewMapY);
      }
      if (ToNewDirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToNewDirection);
      }
      if (errorCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapChangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.NewMapCode != 0) {
        NewMapCode = other.NewMapCode;
      }
      if (other.ToNewMapX != 0) {
        ToNewMapX = other.ToNewMapX;
      }
      if (other.ToNewMapY != 0) {
        ToNewMapY = other.ToNewMapY;
      }
      if (other.ToNewDirection != 0) {
        ToNewDirection = other.ToNewDirection;
      }
      if (other.errorCode_ != null) {
        if (errorCode_ == null) {
          ErrorCode = new global::P5.Protobuf.CommonErrorCode();
        }
        ErrorCode.MergeFrom(other.ErrorCode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewMapCode = input.ReadInt32();
            break;
          }
          case 16: {
            ToNewMapX = input.ReadInt32();
            break;
          }
          case 24: {
            ToNewMapY = input.ReadInt32();
            break;
          }
          case 32: {
            ToNewDirection = input.ReadInt32();
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NewMapCode = input.ReadInt32();
            break;
          }
          case 16: {
            ToNewMapX = input.ReadInt32();
            break;
          }
          case 24: {
            ToNewMapY = input.ReadInt32();
            break;
          }
          case 32: {
            ToNewDirection = input.ReadInt32();
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
