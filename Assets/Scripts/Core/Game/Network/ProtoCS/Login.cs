// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace P5.Protobuf {

  /// <summary>Holder for reflection information generated from Login.proto</summary>
  public static partial class LoginReflection {

    #region Descriptor
    /// <summary>File descriptor for Login.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtMb2dpbi5wcm90bxILUDUuUHJvdG9idWYaDENvbW1vbi5wcm90byJBCgtV",
            "c2VyTG9naW5PbhIPCgd2ZXJTaWduGAEgASgFEhAKCHVzZXJOYW1lGAIgASgJ",
            "Eg8KB3VzZXJQd2QYAyABKAkiWwoTVXNlckxvZ2luT25SZXNwb25zZRIOCgZ1",
            "c2VySWQYASABKAUSEAoIdXNlck5hbWUYAiABKAkSEQoJdXNlclRva2VuGAMg",
            "ASgJEg8KB2lzQWR1bHQYBCABKAUiaAoQVXNlckxvZ2luT25DaGVjaxIOCgZ1",
            "c2VySWQYASABKAUSEAoIdXNlck5hbWUYAiABKAkSDwoHdXNlclB3ZBgDIAEo",
            "CRIPCgdpc0FkdWx0GAQgASgFEhAKCGxhc3RUaW1lGAUgASgFIoQCCgtHYW1l",
            "TG9naW5PbhITCgtpbnB1dE51bWJlchgBIAEoBRIOCgZ1c2VySWQYAiABKAUS",
            "EAoIdXNlck5hbWUYAyABKAkSEQoJdXNlclRva2VuGAQgASgJEhUKDXJvbGVS",
            "YW5kVG9rZW4YBSABKAUSDwoHdmVyU2lnbhgGIAEoBRITCgt1c2VySXNBZHVs",
            "dBgHIAEoBRIQCghkZXZpY2VJZBgIIAEoCRIOCgZyb2xlSWQYCSABKAUSDgoG",
            "Z2FtZUlkGAogASgDEhAKCGdhbWVUeXBlGAsgASgFEhAKCHNlcnZlcklkGAwg",
            "ASgFEgoKAmlwGA0gASgJEgwKBHBvcnQYDiABKAUibQoTR2FtZUxvZ2luT25S",
            "ZXNwb25zZRISCgp0Y3BSYW5kS2V5GAEgASgFEhAKCHdhaXRTZWNzGAIgASgF",
            "EjAKCWVycm9yQ29kZRjnByABKAsyHC5QNS5Qcm90b2J1Zi5Db21tb25FcnJv",
            "ckNvZGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::P5.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.UserLoginOn), global::P5.Protobuf.UserLoginOn.Parser, new[]{ "VerSign", "UserName", "UserPwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.UserLoginOnResponse), global::P5.Protobuf.UserLoginOnResponse.Parser, new[]{ "UserId", "UserName", "UserToken", "IsAdult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.UserLoginOnCheck), global::P5.Protobuf.UserLoginOnCheck.Parser, new[]{ "UserId", "UserName", "UserPwd", "IsAdult", "LastTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.GameLoginOn), global::P5.Protobuf.GameLoginOn.Parser, new[]{ "InputNumber", "UserId", "UserName", "UserToken", "RoleRandToken", "VerSign", "UserIsAdult", "DeviceId", "RoleId", "GameId", "GameType", "ServerId", "Ip", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P5.Protobuf.GameLoginOnResponse), global::P5.Protobuf.GameLoginOnResponse.Parser, new[]{ "TcpRandKey", "WaitSecs", "ErrorCode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///登入(UserLoginServer)
  /// </summary>
  public sealed partial class UserLoginOn : pb::IMessage<UserLoginOn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLoginOn> _parser = new pb::MessageParser<UserLoginOn>(() => new UserLoginOn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginOn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.LoginReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOn(UserLoginOn other) : this() {
      verSign_ = other.verSign_;
      userName_ = other.userName_;
      userPwd_ = other.userPwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOn Clone() {
      return new UserLoginOn(this);
    }

    /// <summary>Field number for the "verSign" field.</summary>
    public const int VerSignFieldNumber = 1;
    private int verSign_;
    /// <summary>
    ///版本號 20190831
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VerSign {
      get { return verSign_; }
      set {
        verSign_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///使用者名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userPwd" field.</summary>
    public const int UserPwdFieldNumber = 3;
    private string userPwd_ = "";
    /// <summary>
    ///密碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPwd {
      get { return userPwd_; }
      set {
        userPwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginOn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginOn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VerSign != other.VerSign) return false;
      if (UserName != other.UserName) return false;
      if (UserPwd != other.UserPwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VerSign != 0) hash ^= VerSign.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserPwd.Length != 0) hash ^= UserPwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VerSign != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VerSign);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserPwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserPwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VerSign != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VerSign);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserPwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserPwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VerSign != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VerSign);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserPwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginOn other) {
      if (other == null) {
        return;
      }
      if (other.VerSign != 0) {
        VerSign = other.VerSign;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserPwd.Length != 0) {
        UserPwd = other.UserPwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VerSign = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserPwd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VerSign = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserPwd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登入回傳(UserLoginServer)
  /// </summary>
  public sealed partial class UserLoginOnResponse : pb::IMessage<UserLoginOnResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLoginOnResponse> _parser = new pb::MessageParser<UserLoginOnResponse>(() => new UserLoginOnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginOnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.LoginReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnResponse(UserLoginOnResponse other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      userToken_ = other.userToken_;
      isAdult_ = other.isAdult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnResponse Clone() {
      return new UserLoginOnResponse(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///userId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///使用者名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userToken" field.</summary>
    public const int UserTokenFieldNumber = 3;
    private string userToken_ = "";
    /// <summary>
    ///token : userId,tcpRandKey組合加上加密
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isAdult" field.</summary>
    public const int IsAdultFieldNumber = 4;
    private int isAdult_;
    /// <summary>
    ///是否成年 (無用途)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsAdult {
      get { return isAdult_; }
      set {
        isAdult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginOnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginOnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserToken != other.UserToken) return false;
      if (IsAdult != other.IsAdult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (IsAdult != 0) hash ^= IsAdult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserToken);
      }
      if (IsAdult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsAdult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserToken);
      }
      if (IsAdult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsAdult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (IsAdult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsAdult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginOnResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      if (other.IsAdult != 0) {
        IsAdult = other.IsAdult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserToken = input.ReadString();
            break;
          }
          case 32: {
            IsAdult = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserToken = input.ReadString();
            break;
          }
          case 32: {
            IsAdult = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///檢查資料
  /// </summary>
  public sealed partial class UserLoginOnCheck : pb::IMessage<UserLoginOnCheck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLoginOnCheck> _parser = new pb::MessageParser<UserLoginOnCheck>(() => new UserLoginOnCheck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginOnCheck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.LoginReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnCheck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnCheck(UserLoginOnCheck other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      userPwd_ = other.userPwd_;
      isAdult_ = other.isAdult_;
      lastTime_ = other.lastTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginOnCheck Clone() {
      return new UserLoginOnCheck(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userPwd" field.</summary>
    public const int UserPwdFieldNumber = 3;
    private string userPwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPwd {
      get { return userPwd_; }
      set {
        userPwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isAdult" field.</summary>
    public const int IsAdultFieldNumber = 4;
    private int isAdult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsAdult {
      get { return isAdult_; }
      set {
        isAdult_ = value;
      }
    }

    /// <summary>Field number for the "lastTime" field.</summary>
    public const int LastTimeFieldNumber = 5;
    private int lastTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastTime {
      get { return lastTime_; }
      set {
        lastTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginOnCheck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginOnCheck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserPwd != other.UserPwd) return false;
      if (IsAdult != other.IsAdult) return false;
      if (LastTime != other.LastTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserPwd.Length != 0) hash ^= UserPwd.GetHashCode();
      if (IsAdult != 0) hash ^= IsAdult.GetHashCode();
      if (LastTime != 0) hash ^= LastTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserPwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserPwd);
      }
      if (IsAdult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsAdult);
      }
      if (LastTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LastTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserPwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserPwd);
      }
      if (IsAdult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IsAdult);
      }
      if (LastTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LastTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserPwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPwd);
      }
      if (IsAdult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsAdult);
      }
      if (LastTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginOnCheck other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserPwd.Length != 0) {
        UserPwd = other.UserPwd;
      }
      if (other.IsAdult != 0) {
        IsAdult = other.IsAdult;
      }
      if (other.LastTime != 0) {
        LastTime = other.LastTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserPwd = input.ReadString();
            break;
          }
          case 32: {
            IsAdult = input.ReadInt32();
            break;
          }
          case 40: {
            LastTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserPwd = input.ReadString();
            break;
          }
          case 32: {
            IsAdult = input.ReadInt32();
            break;
          }
          case 40: {
            LastTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登入(GameServer)
  /// </summary>
  public sealed partial class GameLoginOn : pb::IMessage<GameLoginOn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameLoginOn> _parser = new pb::MessageParser<GameLoginOn>(() => new GameLoginOn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameLoginOn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.LoginReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOn(GameLoginOn other) : this() {
      inputNumber_ = other.inputNumber_;
      userId_ = other.userId_;
      userName_ = other.userName_;
      userToken_ = other.userToken_;
      roleRandToken_ = other.roleRandToken_;
      verSign_ = other.verSign_;
      userIsAdult_ = other.userIsAdult_;
      deviceId_ = other.deviceId_;
      roleId_ = other.roleId_;
      gameId_ = other.gameId_;
      gameType_ = other.gameType_;
      serverId_ = other.serverId_;
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOn Clone() {
      return new GameLoginOn(this);
    }

    /// <summary>Field number for the "inputNumber" field.</summary>
    public const int InputNumberFieldNumber = 1;
    private int inputNumber_;
    /// <summary>
    ///傳入參數數量 因為可以收6or12or13  三種型態 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InputNumber {
      get { return inputNumber_; }
      set {
        inputNumber_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///貌似跟userName一樣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    /// <summary>
    ///使用者名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userToken" field.</summary>
    public const int UserTokenFieldNumber = 4;
    private string userToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roleRandToken" field.</summary>
    public const int RoleRandTokenFieldNumber = 5;
    private int roleRandToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleRandToken {
      get { return roleRandToken_; }
      set {
        roleRandToken_ = value;
      }
    }

    /// <summary>Field number for the "verSign" field.</summary>
    public const int VerSignFieldNumber = 6;
    private int verSign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VerSign {
      get { return verSign_; }
      set {
        verSign_ = value;
      }
    }

    /// <summary>Field number for the "userIsAdult" field.</summary>
    public const int UserIsAdultFieldNumber = 7;
    private int userIsAdult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserIsAdult {
      get { return userIsAdult_; }
      set {
        userIsAdult_ = value;
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 8;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 9;
    private int roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 10;
    private long gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 11;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "serverId" field.</summary>
    public const int ServerIdFieldNumber = 12;
    private int serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 13;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 14;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameLoginOn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameLoginOn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputNumber != other.InputNumber) return false;
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserToken != other.UserToken) return false;
      if (RoleRandToken != other.RoleRandToken) return false;
      if (VerSign != other.VerSign) return false;
      if (UserIsAdult != other.UserIsAdult) return false;
      if (DeviceId != other.DeviceId) return false;
      if (RoleId != other.RoleId) return false;
      if (GameId != other.GameId) return false;
      if (GameType != other.GameType) return false;
      if (ServerId != other.ServerId) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputNumber != 0) hash ^= InputNumber.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (RoleRandToken != 0) hash ^= RoleRandToken.GetHashCode();
      if (VerSign != 0) hash ^= VerSign.GetHashCode();
      if (UserIsAdult != 0) hash ^= UserIsAdult.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (GameId != 0L) hash ^= GameId.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputNumber);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (UserToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserToken);
      }
      if (RoleRandToken != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoleRandToken);
      }
      if (VerSign != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VerSign);
      }
      if (UserIsAdult != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UserIsAdult);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DeviceId);
      }
      if (RoleId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RoleId);
      }
      if (GameId != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(GameId);
      }
      if (GameType != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GameType);
      }
      if (ServerId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ServerId);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputNumber);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (UserToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserToken);
      }
      if (RoleRandToken != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoleRandToken);
      }
      if (VerSign != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VerSign);
      }
      if (UserIsAdult != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UserIsAdult);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DeviceId);
      }
      if (RoleId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RoleId);
      }
      if (GameId != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(GameId);
      }
      if (GameType != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GameType);
      }
      if (ServerId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ServerId);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputNumber);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (RoleRandToken != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleRandToken);
      }
      if (VerSign != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VerSign);
      }
      if (UserIsAdult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserIsAdult);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (GameId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameId);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameLoginOn other) {
      if (other == null) {
        return;
      }
      if (other.InputNumber != 0) {
        InputNumber = other.InputNumber;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      if (other.RoleRandToken != 0) {
        RoleRandToken = other.RoleRandToken;
      }
      if (other.VerSign != 0) {
        VerSign = other.VerSign;
      }
      if (other.UserIsAdult != 0) {
        UserIsAdult = other.UserIsAdult;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.GameId != 0L) {
        GameId = other.GameId;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputNumber = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            UserToken = input.ReadString();
            break;
          }
          case 40: {
            RoleRandToken = input.ReadInt32();
            break;
          }
          case 48: {
            VerSign = input.ReadInt32();
            break;
          }
          case 56: {
            UserIsAdult = input.ReadInt32();
            break;
          }
          case 66: {
            DeviceId = input.ReadString();
            break;
          }
          case 72: {
            RoleId = input.ReadInt32();
            break;
          }
          case 80: {
            GameId = input.ReadInt64();
            break;
          }
          case 88: {
            GameType = input.ReadInt32();
            break;
          }
          case 96: {
            ServerId = input.ReadInt32();
            break;
          }
          case 106: {
            Ip = input.ReadString();
            break;
          }
          case 112: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputNumber = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            UserToken = input.ReadString();
            break;
          }
          case 40: {
            RoleRandToken = input.ReadInt32();
            break;
          }
          case 48: {
            VerSign = input.ReadInt32();
            break;
          }
          case 56: {
            UserIsAdult = input.ReadInt32();
            break;
          }
          case 66: {
            DeviceId = input.ReadString();
            break;
          }
          case 72: {
            RoleId = input.ReadInt32();
            break;
          }
          case 80: {
            GameId = input.ReadInt64();
            break;
          }
          case 88: {
            GameType = input.ReadInt32();
            break;
          }
          case 96: {
            ServerId = input.ReadInt32();
            break;
          }
          case 106: {
            Ip = input.ReadString();
            break;
          }
          case 112: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登入回傳(GameServer)
  /// </summary>
  public sealed partial class GameLoginOnResponse : pb::IMessage<GameLoginOnResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameLoginOnResponse> _parser = new pb::MessageParser<GameLoginOnResponse>(() => new GameLoginOnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameLoginOnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P5.Protobuf.LoginReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOnResponse(GameLoginOnResponse other) : this() {
      tcpRandKey_ = other.tcpRandKey_;
      waitSecs_ = other.waitSecs_;
      errorCode_ = other.errorCode_ != null ? other.errorCode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameLoginOnResponse Clone() {
      return new GameLoginOnResponse(this);
    }

    /// <summary>Field number for the "tcpRandKey" field.</summary>
    public const int TcpRandKeyFieldNumber = 1;
    private int tcpRandKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TcpRandKey {
      get { return tcpRandKey_; }
      set {
        tcpRandKey_ = value;
      }
    }

    /// <summary>Field number for the "waitSecs" field.</summary>
    public const int WaitSecsFieldNumber = 2;
    private int waitSecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaitSecs {
      get { return waitSecs_; }
      set {
        waitSecs_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 999;
    private global::P5.Protobuf.CommonErrorCode errorCode_;
    /// <summary>
    ///錯誤碼 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P5.Protobuf.CommonErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameLoginOnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameLoginOnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TcpRandKey != other.TcpRandKey) return false;
      if (WaitSecs != other.WaitSecs) return false;
      if (!object.Equals(ErrorCode, other.ErrorCode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TcpRandKey != 0) hash ^= TcpRandKey.GetHashCode();
      if (WaitSecs != 0) hash ^= WaitSecs.GetHashCode();
      if (errorCode_ != null) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TcpRandKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TcpRandKey);
      }
      if (WaitSecs != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WaitSecs);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TcpRandKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TcpRandKey);
      }
      if (WaitSecs != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WaitSecs);
      }
      if (errorCode_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TcpRandKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TcpRandKey);
      }
      if (WaitSecs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitSecs);
      }
      if (errorCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameLoginOnResponse other) {
      if (other == null) {
        return;
      }
      if (other.TcpRandKey != 0) {
        TcpRandKey = other.TcpRandKey;
      }
      if (other.WaitSecs != 0) {
        WaitSecs = other.WaitSecs;
      }
      if (other.errorCode_ != null) {
        if (errorCode_ == null) {
          ErrorCode = new global::P5.Protobuf.CommonErrorCode();
        }
        ErrorCode.MergeFrom(other.ErrorCode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TcpRandKey = input.ReadInt32();
            break;
          }
          case 16: {
            WaitSecs = input.ReadInt32();
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TcpRandKey = input.ReadInt32();
            break;
          }
          case 16: {
            WaitSecs = input.ReadInt32();
            break;
          }
          case 7994: {
            if (errorCode_ == null) {
              ErrorCode = new global::P5.Protobuf.CommonErrorCode();
            }
            input.ReadMessage(ErrorCode);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
